# This is a basic workflow to help you get started with Actions

name: Dev_workflow_externalapi
env:
  MY_FNAME: gaurav
  MY_LNAME: verma
  PROJECT_PATH: '/home/runner/work'

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "develop" branch
  push:
    branches: [ "develop" ]

permissions:
  id-token: write    # This is required for OIDC authentication
  contents: read
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment:
      name: dev
    steps:
#      - name: Set Azure Login Creds for Github SPN
#        run: |
#          echo 'AZURE_CREDS={"clientId": "${{ secrets.AZURE_CLIENT_ID }}", "clientSecret": "${{secrets.AZURE_CLIENT_SECRET}}", "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}", "tenantId": "${{ secrets.AZURE_TENANT_ID }}"}' >>$GITHUB_ENV
#      - name: Login to Azure
#        uses: Azure/login@v1
#        with:
#          allow-no-subscriptions: true
#          creds: ${{env.AZURE_CREDS}}
#
#      - name: Get secrets from Key Vault
#        uses: Azure/get-keyvault-secrets@v1
#        with:
#          keyvault: "gauravkvtest"
#          secrets: "FName, LNamenew"
#        id: my_secrets_id
#
#      - name: Use the secrets in your workflow
#        run: |
#          echo "Secret 1 value: ${{ steps.my_secrets_id.outputs.FName }}"
#          echo "Secret 2 value: ${{ steps.my_secrets_id.outputs.LNamenew }}"

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        name: checkout Code
        with:
          sparse-checkout: 'external_api'  # Specify the desired folder
          sparse-checkout-cone-mode: false
          repository: ${{github.repository}}
          ref: develop
          path: 'hybris_pipeline_external_api'
      - name: Show_folder
        working-directory: "${{github.repository}}/hybris_pipeline_external_api"
        run: ls

#      - name: Setup and Run Pipeline
#        working-directory: "D:\\Work_2\\actions-runner\\_work\\PracticeGithubActions\\PracticeGithubActions\\hybris_pipeline_external_api"
#        run: |
#          echo Setup and Run Pipeline
#          python -m venv venv
#          cd venv/Scripts
#          .\activate
#          cd..
#          cd..
#          cd 'Tool\\external_api'
#          python newpythonfile.py
#        env:
#          F_NAME: ${{ steps.my_secrets_id.outputs.FName }}
            

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello- ${{ vars.MY_ENV_FULL_DESC }}!. you are with secret ${{ secrets.SECRET1 }}. ${{env.MY_FNAME}}

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project, repository ${{github.repository}}.
